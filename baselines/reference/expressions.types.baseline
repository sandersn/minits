["var negative = -1 var mult = (1 *... :: Some (Identifier "null")";
 "var negative = -1 :: Some (Identifier "int")"; "-1 :: Some (Identifier "int")";
 "1 :: Some (Identifier "int")";
 "var mult = (1 * 2) :: Some (Identifier "error")";
 "(1 * 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "var div = (1 / 2) :: Some (Identifier "error")";
 "(1 / 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "var muldiv = ((1 * 2) / 3) :: Some (Identifier "error")";
 "((1 * 2) / 3) :: Some (Identifier "error")";
 "(1 * 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "3 :: None";
 "var muldiv2 = ((1 / 2) * 3) :: Some (Identifier "error")";
 "((1 / 2) * 3) :: Some (Identifier "error")";
 "(1 / 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "3 :: None"; "var add = (1 + 2) :: Some (Identifier "error")";
 "(1 + 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "var sub = (1 - 2) :: Some (Identifier "error")";
 "(1 - 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "var addsub = ((1 + 2) - 3) :: Some (Identifier "error")";
 "((1 + 2) - 3) :: Some (Identifier "error")";
 "(1 + 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "3 :: None";
 "var muladd = ((1 * 2) + 3) :: Some (Identifier "error")";
 "((1 * 2) + 3) :: Some (Identifier "error")";
 "(1 * 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "3 :: None";
 "var muladd2 = (((1 * 2) * 3) + 4) :: Some (Identifier "error")";
 "(((1 * 2) * 3) + 4) :: Some (Identifier "error")"; "((1 * 2) * 3) :: None";
 "(1 * 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "3 :: None"; "4 :: None";
 "var addmul2 = (1 + ((2 * 3) * 4)) :: Some (Identifier "error")";
 "(1 + ((2 * 3) * 4)) :: Some (Identifier "error")";
 "1 :: Some (Identifier "int")"; "((2 * 3) * 4) :: None"; "(2 * 3) :: None";
 "2 :: None"; "3 :: None"; "4 :: None";
 "var addmul34 = (((1 * 2) + 3) + (... :: Some (Identifier "error")";
 "(((1 * 2) + 3) + ((4 * 5) * 6)) :: Some (Identifier "error")";
 "((1 * 2) + 3) :: Some (Identifier "error")";
 "(1 * 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "3 :: None"; "((4 * 5) * 6) :: None"; "(4 * 5) :: None";
 "4 :: None"; "5 :: None"; "6 :: None";
 "var ltaddmul = ((1 * 2) < (3 + (4... :: Some (Identifier "error")";
 "((1 * 2) < (3 + (4 * 5))) :: Some (Identifier "error")";
 "(1 * 2) :: Some (Identifier "error")"; "1 :: Some (Identifier "int")";
 "2 :: None"; "(3 + (4 * 5)) :: None"; "3 :: None"; "(4 * 5) :: None";
 "4 :: None"; "5 :: None";
 "ltaddmul = addmul34 = ((addsub /=... :: Some (Identifier "error")";
 "ltaddmul = addmul34 = ((addsub /=... :: Some (Identifier "error")";
 "ltaddmul :: Some (Identifier "error")";
 "addmul34 = ((addsub /= 1) | ((sub... :: Some (Identifier "error")";
 "addmul34 :: Some (Identifier "error")";
 "((addsub /= 1) | ((sub <= 12) & (... :: Some (Identifier "error")";
 "(addsub /= 1) :: None"; "addsub :: None"; "addsub :: None";
 "1 :: Some (Identifier "int")"; "((sub <= 12) & (muldiv == muldiv2)) :: None";
 "(sub <= 12) :: None"; "sub :: None"; "sub :: None"; "12 :: None";
 "(muldiv == muldiv2) :: None"; "muldiv :: None"; "muldiv :: None"; ...]