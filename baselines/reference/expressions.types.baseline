["File  [Var ("negative", None, Neg... :: Some (Identifier "null")";
 "Var ("negative", None, Negative (... :: Some (Identifier "int")";
 "Negative (IntLiteral 1) :: Some (Identifier "int")";
 "IntLiteral 1 :: Some (Identifier "int")";
 "Var ("mult", None, Binary (IntLit... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Asterisk, I... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "Var ("div", None, Binary (IntLite... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, ForwardSlas... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "Var  ("muldiv", None,   Binary   ... :: Some (Identifier "error")";
 "Binary  (Binary (IntLiteral 1, As... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Asterisk, I... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None";
 "Var  ("muldiv2", None,   Binary  ... :: Some (Identifier "error")";
 "Binary  (Binary (IntLiteral 1, Fo... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, ForwardSlas... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None";
 "Var ("add", None, Binary (IntLite... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Plus, IntLi... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "Var ("sub", None, Binary (IntLite... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Minus, IntL... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "Var  ("addsub", None,   Binary (B... :: Some (Identifier "error")";
 "Binary (Binary (IntLiteral 1, Plu... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Plus, IntLi... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None";
 "Var  ("muladd", None,   Binary (B... :: Some (Identifier "error")";
 "Binary (Binary (IntLiteral 1, Ast... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Asterisk, I... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None";
 "Var  ("muladd2", None,   Binary  ... :: Some (Identifier "error")";
 "Binary  (Binary     (Binary (IntL... :: Some (Identifier "error")";
 "Binary (Binary (IntLiteral 1, Ast... :: None";
 "Binary (IntLiteral 1, Asterisk, I... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None"; "IntLiteral 4 :: None";
 "Var  ("addmul2", None,   Binary  ... :: Some (Identifier "error")";
 "Binary  (IntLiteral 1, Plus,   Bi... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")";
 "Binary (Binary (IntLiteral 2, Ast... :: None";
 "Binary (IntLiteral 2, Asterisk, I... :: None"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None"; "IntLiteral 4 :: None";
 "Var  ("addmul34", None,   Binary ... :: Some (Identifier "error")";
 "Binary  (Binary (Binary (IntLiter... :: Some (Identifier "error")";
 "Binary (Binary (IntLiteral 1, Ast... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Asterisk, I... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "IntLiteral 3 :: None"; "Binary (Binary (IntLiteral 4, Ast... :: None";
 "Binary (IntLiteral 4, Asterisk, I... :: None"; "IntLiteral 4 :: None";
 "IntLiteral 5 :: None"; "IntLiteral 6 :: None";
 "Var  ("ltaddmul", None,   Binary ... :: Some (Identifier "error")";
 "Binary  (Binary (IntLiteral 1, As... :: Some (Identifier "error")";
 "Binary (IntLiteral 1, Asterisk, I... :: Some (Identifier "error")";
 "IntLiteral 1 :: Some (Identifier "int")"; "IntLiteral 2 :: None";
 "Binary (IntLiteral 3, Plus, Binar... :: None"; "IntLiteral 3 :: None";
 "Binary (IntLiteral 4, Asterisk, I... :: None"; "IntLiteral 4 :: None";
 "IntLiteral 5 :: None";
 "ExpressionStatement  (Assignment ... :: Some (Identifier "error")";
 "Assignment  (Identifier "ltaddmul... :: Some (Identifier "error")";
 "Identifier "ltaddmul" :: Some (Identifier "error")";
 "Assignment  (Identifier "addmul34... :: Some (Identifier "error")";
 "Identifier "addmul34" :: Some (Identifier "error")";
 "Binary  (Binary (LValue (Identifi... :: Some (Identifier "error")";
 "Binary (LValue (Identifier "addsu... :: None";
 "LValue (Identifier "addsub") :: None"; "Identifier "addsub" :: None";
 "IntLiteral 1 :: Some (Identifier "int")";
 "Binary  (Binary (LValue (Identifi... :: None";
 "Binary (LValue (Identifier "sub")... :: None";
 "LValue (Identifier "sub") :: None"; "Identifier "sub" :: None";
 "IntLiteral 12 :: None"; "Binary  (LValue (Identifier "muld... :: None";
 "LValue (Identifier "muldiv") :: None"; "Identifier "muldiv" :: None"; ...]